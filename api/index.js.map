{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/styles/createEmotionCache.tsx", "../app/styles/theme.tsx", "../app/styles/stylesContext.tsx", "../app/root.tsx", "../app/components/Header.tsx", "../app/components/layout.tsx", "../get-env.ts", "../app/routes/ssr-user-demo.tsx", "../app/routes/paymentplans.tsx", "../app/components/paymentplan_card.tsx", "../app/utils/helpers.ts", "../app/utils/constants.ts", "../app/services/external-api.service.server.ts", "../app/services/accounts.server.ts", "../app/services/kpi.server.ts", "../app/services/waterfall.ts", "../app/services/transactions.server.ts", "../app/utils/types.server.ts", "../app/utils/paymentplan_request_converter.server.ts", "../app/services/paymentplan.server.ts", "../app/services/plaid.server.ts", "../app/services/api.server.ts", "../app/routes/dashboard.tsx", "../app/components/waterfall.tsx", "../app/components/kpi_panel.tsx", "../app/components/transactions_table_with_pagination.tsx", "../app/routes/dashboard/paymentplan.summary.tsx", "../app/components/portal.tsx", "../app/components/modal.tsx", "../app/routes/dashboard/paymentplan.tsx", "../app/components/account_accordion.tsx", "../app/components/TrxnTableWithCheckbox/transactions_table_with_checkbox.tsx", "../app/components/paymentplan_preferences.tsx", "../app/components/select-box.tsx", "../app/routes/sign-in/$.tsx", "../app/routes/sign-up/$.tsx", "../app/routes/ssr-demo.tsx", "../app/routes/user/$.tsx", "../app/routes/about.tsx", "../app/routes/index.tsx", "../app/components/Footer.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport dotenv from \"dotenv\";\nimport type { ReactElement } from \"react\";\nimport createEmotionCache from \"~/styles/createEmotionCache\";\nimport { CacheProvider } from \"@emotion/react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"~/styles/theme\";\nimport StylesContext from \"~/styles/stylesContext\";\ndotenv.config();\n\nconst ABORT_DELAY = 5000;\nconst cache = createEmotionCache();\n\nconst MuiRemixServer = (children: ReactElement) => (\n  <CacheProvider value={cache}>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  </CacheProvider>\n);\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const remixServerWithStyles = (\n      <StylesContext.Provider value={null}>\n        {MuiRemixServer(\n          <RemixServer context={remixContext} url={request.url} />\n        )}\n      </StylesContext.Provider>\n    );\n\n    const { pipe, abort } = renderToPipeableStream(remixServerWithStyles, {\n      [callbackName]: () => {\n        const body = new PassThrough();\n\n        responseHeaders.set(\"Content-Type\", \"text/html\");\n\n        resolve(\n          new Response(body, {\n            headers: responseHeaders,\n            status: didError ? 500 : responseStatusCode,\n          })\n        );\n\n        pipe(body);\n      },\n      onShellError: (err: unknown) => {\n        reject(err);\n      },\n      onError: (error: unknown) => {\n        didError = true;\n\n        console.error(error);\n      },\n    });\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import createCache from \"@emotion/cache\";\n\nexport default function createEmotionCache() {\n  return createCache({ key: \"css\" });\n}\n", "import { createTheme } from \"@mui/material/styles\";\nimport { red } from \"@mui/material/colors\";\nimport type { PaletteOptions } from \"@mui/material\";\n\ndeclare module \"@mui/material/styles\" {\n  interface Theme {\n    palette: PaletteOptions;\n  }\n  // allow configuration using `createTheme`\n  interface ThemeOptions {\n    palette?: PaletteOptions | undefined;\n  }\n}\n\n// Create a theme instance.\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;\n", "import { createContext } from \"react\";\n\nexport interface StyleContextData {\n  key: string;\n  ids: Array<string>;\n  css: string;\n}\n\nexport default createContext<null | StyleContextData[]>(null);\n", "// noinspection JSUnusedGlobalSymbols\n\nimport type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n  SerializeFrom,\n} from \"@remix-run/node\";\nimport {\n  Link,\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from \"@remix-run/react\";\nimport { rootAuthLoader } from \"@clerk/remix/ssr.server\";\nimport { ClerkApp, ClerkCatchBoundary } from \"@clerk/remix\";\nimport clark_styles from \"~/styles/shared.css\";\nimport styles from \"~/styles/app.css\";\nimport Header from \"~/components/Header\";\nimport React, { useContext } from \"react\";\nimport StylesContext from \"~/styles/stylesContext\";\nimport Layout from \"~/components/layout\";\nimport tremor_styles from \"@tremor/react/dist/esm/tremor.css\";\nimport { Analytics } from \"@vercel/analytics/react\";\nimport getEnv from \"../get-env\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Re.Zero\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"preload\", href: clark_styles, as: \"style\" },\n    { rel: \"preload\", href: styles, as: \"style\" },\n    { rel: \"preload\", href: tremor_styles, as: \"style\" },\n    //Preload CSS to makes it nonblocking\n    { rel: \"stylesheet\", href: clark_styles },\n    { rel: \"stylesheet\", href: styles },\n    { rel: \"stylesheet\", href: tremor_styles },\n  ];\n};\n\nconst env = getEnv();\n\nexport const loader: LoaderFunction = (args) => {\n  return rootAuthLoader(\n    args,\n    ({ request }) => {\n      const { userId, sessionId, getToken } = request.auth;\n      console.log(\"Root loader auth:\", {\n        userId,\n        sessionId,\n        getToken,\n      });\n      return {\n        message: `Hello from the root loader`,\n        ENV: { VERCEL_ANALYTICS_ID: process.env.VERCEL_ANALYTICS_ID },\n      };\n    },\n    { loadUser: true }\n  );\n};\n\ndeclare global {\n  interface Window {\n    ENV: SerializeFrom<typeof loader>[\"ENV\"];\n  }\n}\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  const styleData = useContext(StylesContext);\n  const titleText = title ? title : null;\n  return (\n    <html lang=\"en\">\n      <head>\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n        <title>{titleText}</title>\n        {styleData?.map(({ key, ids, css }) => (\n          <style\n            key={key}\n            data-emotion={`${key} ${ids.join(\" \")}`}\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: css }}\n          />\n        ))}\n      </head>\n      <body>\n        <Header />\n        <Layout>{children}</Layout>\n        <ScrollRestoration />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(env?.VERCEL_ANALYTICS_ID)}`,\n          }}\n        />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n        {process.env.NODE_ENV !== \"development\" ? (\n          <Analytics debug={false} />\n        ) : null}\n      </body>\n    </html>\n  );\n}\n\nfunction App() {\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  );\n}\n\nexport const ErrorBoundary = ({ error }: { error: Error }) => {\n  return (\n    <Document title=\"Error!\">\n      <div>\n        <h1>Error</h1>\n        <p>{error.message}</p>\n        <p>The stack trace is:</p>\n        <pre>{error.stack}</pre>\n      </div>\n    </Document>\n  );\n};\n\nfunction DefaultCatchBoundary() {\n  const caught = useCatch();\n  switch (caught.status) {\n    case 401:\n    case 404:\n    case 406:\n      return (\n        <Document title={`${caught.status} ${caught.statusText}`}>\n          <div className=\"w-screen min-h-screen flex items-center justify-center\">\n            <article className=\"prose prose-lg prose-blue w-full max-w-lg\">\n              <h1>\n                <span className=\"font-mono text-blue-500 pr-5\">\n                  {caught.status}\n                </span>\n                <br /> {caught.data}\n              </h1>\n              <pre>\n                <code>{JSON.stringify(caught.data, null, 2)}</code>\n              </pre>\n              <hr />\n              <p>\n                <Link to=\"/\">Start fresh</Link>\n              </p>\n            </article>\n          </div>\n        </Document>\n      );\n\n    default:\n      throw new Error(\n        `Unexpected caught response with status: ${caught.status}`\n      );\n  }\n}\n\nexport default ClerkApp(App);\n\nexport const CatchBoundary = ClerkCatchBoundary(DefaultCatchBoundary);\n", "import { SignedIn, SignedOut, UserButton } from \"@clerk/remix\";\nimport { Link } from \"@remix-run/react\";\nimport { Bars3Icon, XMarkIcon } from \"@heroicons/react/24/outline\";\nimport { Dialog } from \"@headlessui/react\";\nimport { useState } from \"react\";\n\nconst navigation = [\n  { name: \"Home\", href: \"/\", protected: false },\n  // { name: \"About\", href: \"/about\", protected: false },\n  { name: \"Dashboard\", href: \"/dashboard\", protected: true },\n  { name: \"Payment Plans\", href: \"/paymentplans\", protected: true },\n];\n\n// Header component using <SignedIn> & <SignedOut>.\n//\n// The SignedIn and SignedOut components are used to control rendering depending\n// on whether a visitor is signed in.\n//\n// https://docs.clerk.dev/frontend/react/signedin-and-signedout\nconst Header = (): JSX.Element => {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const handleDialogCloseOnLinkClick = () => {\n    setMobileMenuOpen(false);\n  };\n\n  return (\n    <div className=\"isolate bg-white\">\n      <header className=\"header\">\n        <div className=\"absolute inset-x-0 top-[-10rem] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[-20rem]\">\n          <svg\n            className=\"relative left-[calc(50%-11rem)] -z-10 h-[21.1875rem] max-w-none -translate-x-1/2 rotate-[30deg] sm:left-[calc(50%-30rem)] sm:h-[42.375rem]\"\n            viewBox=\"0 0 1155 678\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fill=\"url(#45de2b6b-92d5-4d68-a6a0-9b9b2abad533)\"\n              fillOpacity=\".3\"\n              d=\"M317.219 518.975L203.852 678 0 438.341l317.219 80.634 204.172-286.402c1.307 132.337 45.083 346.658 209.733 145.248C936.936 126.058 882.053-94.234 1031.02 41.331c119.18 108.451 130.68 295.337 121.53 375.223L855 299l21.173 362.054-558.954-142.079z\"\n            />\n            <defs>\n              <linearGradient\n                id=\"45de2b6b-92d5-4d68-a6a0-9b9b2abad533\"\n                x1=\"1155.49\"\n                x2=\"-78.208\"\n                y1=\".177\"\n                y2=\"474.645\"\n                gradientUnits=\"userSpaceOnUse\"\n              >\n                <stop stopColor=\"#9089FC\" />\n                <stop offset={1} stopColor=\"#FF80B5\" />\n              </linearGradient>\n            </defs>\n          </svg>\n        </div>\n\n        <div className=\"left justify-between\">\n          <Link to=\"/\" className=\"-m-1.5 p-1.5\">\n            <img\n              className=\"h-8\"\n              src=\"/logo.svg\"\n              width=\"32\"\n              height=\"32\"\n              alt=\"Logo\"\n            />\n            <span className=\"sr-only\">Ot.Zero</span>\n          </Link>\n        </div>\n\n        <div className=\"flex lg:hidden\">\n          <button\n            type=\"button\"\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\n            onClick={() => setMobileMenuOpen(true)}\n          >\n            <span className=\"sr-only\">Open main menu</span>\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n        </div>\n\n        <div className=\"hidden lg:flex lg:gap-x-12\">\n          {navigation.map((item) => {\n            if (item.protected)\n              return (\n                <SignedIn key={item.name}>\n                  <Link\n                    key={item.name}\n                    to={item.href}\n                    className=\"text-sm font-semibold leading-6 text-gray-900\"\n                  >\n                    {item.name}\n                  </Link>\n                </SignedIn>\n              );\n            return (\n              <Link\n                key={item.name}\n                to={item.href}\n                className=\"text-sm font-semibold leading-6 text-gray-900\"\n              >\n                {item.name}\n              </Link>\n            );\n          })}\n        </div>\n        <div className=\"hidden lg:flex right\">\n          <SignedOut>\n            <Link\n              to=\"/sign-in\"\n              className=\"text-sm font-semibold leading-6 text-gray-900\"\n            >\n              Sign in\n            </Link>\n          </SignedOut>\n          <SignedIn>\n            <UserButton userProfileUrl=\"/user\" afterSignOutUrl=\"/\" />\n          </SignedIn>\n        </div>\n\n        <Dialog as=\"div\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\n          <Dialog.Panel className=\"fixed inset-0 z-10 overflow-y-auto bg-white px-6 py-6 lg:hidden\">\n            <div className=\"flex items-center justify-between\">\n              <Link to=\"/\" className=\"-m-1.5 p-1.5\">\n                <img\n                  className=\"h-8\"\n                  src=\"/logo.svg\"\n                  width=\"32\"\n                  height=\"32\"\n                  alt=\"Logo\"\n                />\n                <span className=\"sr-only\">Ot.Zero</span>\n              </Link>\n              <button\n                type=\"button\"\n                className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\n                onClick={() => setMobileMenuOpen(false)}\n              >\n                <span className=\"sr-only\">Close menu</span>\n                <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n              </button>\n            </div>\n            <div className=\"mt-6 flow-root\">\n              <div className=\"-my-6 divide-y divide-gray-500/10\">\n                <div className=\"space-y-2 py-6\">\n                  {navigation.map((item) => {\n                    if (item.protected)\n                      return (\n                        <SignedIn key={item.name}>\n                          <Link\n                            key={item.name}\n                            onClick={handleDialogCloseOnLinkClick}\n                            to={item.href}\n                            className=\"-mx-3 block rounded-lg py-2 px-3 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-400/10\"\n                          >\n                            {item.name}\n                          </Link>\n                        </SignedIn>\n                      );\n                    return (\n                      <Link\n                        key={item.name}\n                        onClick={handleDialogCloseOnLinkClick}\n                        to={item.href}\n                        className=\"-mx-3 block rounded-lg py-2 px-3 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-400/10\"\n                      >\n                        {item.name}\n                      </Link>\n                    );\n                  })}\n                </div>\n                <div className=\"py-6\">\n                  <SignedOut>\n                    <Link\n                      to=\"/sign-in\"\n                      onClick={handleDialogCloseOnLinkClick}\n                      className=\"-mx-3 block rounded-lg py-2.5 px-3 text-base font-semibold leading-6 text-gray-900 hover:bg-gray-400/10\"\n                    >\n                      Sign in\n                    </Link>\n                  </SignedOut>\n                  <SignedIn>\n                    <UserButton userProfileUrl=\"/user\" afterSignOutUrl=\"/\" />\n                  </SignedIn>\n                </div>\n              </div>\n            </div>\n          </Dialog.Panel>\n        </Dialog>\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n", "import React from \"react\";\nimport Container from \"@mui/material/Container\";\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  return <Container maxWidth=\"lg\">{children}</Container>;\n}\n", "function isBrowser() {\n  return typeof window !== \"undefined\";\n}\n\nfunction getEnv() {\n  return isBrowser() ? window.ENV : process.env;\n}\n\nexport default getEnv;\n", "// import type { LoaderFunction } from \"@remix-run/node\";\n// import { redirect } from \"@remix-run/node\";\n// import { useLoaderData } from \"@remix-run/react\";\n//\n// import { getAuth } from \"@clerk/remix/ssr.server\";\n// import { createClerkClient } from \"@clerk/remix/api.server\";\n// import * as process from \"process\";\n//\n// export const loader: LoaderFunction = async (args) => {\n//   const { userId } = await getAuth(args);\n//\n//   if (!userId) {\n//     return redirect(\"/sign-in\");\n//   }\n//\n//   const { firstName } = await createClerkClient({\n//     apiKey: process.env.CLERK_SECRET_KEY,\n//   }).users.getUser(userId);\n//   return { serialisedUser: firstName };\n// };\n//\n// export default function SsrDemoPage() {\n//   const { serialisedUser } = useLoaderData();\n//\n//   return (\n//     <div className=\"container\">\n//       <main className=\"main\">\n//         <h1 className=\"title\">SSR Demo page with /api.server</h1>\n//         <p className=\"description\">\n//           This route has a loader that fetches the user on the server-side.\n//         </p>\n//         <p className=\"description\">\n//           If you only intend to use the `user` object on the client-side, you\n//           most probably want to simply use the `useUser` hook instead.\n//         </p>\n//\n//         <div className=\"preContainer\">\n//           <h2>useLoaderData hook</h2>\n//           <p className=\"description\">\n//             The loader uses getAuth to get the userId and users.getUser to fetch\n//             the user object\n//           </p>\n//           <pre>{JSON.stringify({ serialisedUser }, null, 2)}</pre>\n//         </div>\n//       </main>\n//     </div>\n//   );\n// }\n\nexport {};\n", "import { Button, Card, Footer, Text, Title } from \"@tremor/react\";\nimport type { GetPaymentPlansResponse } from \"~/utils/types.server\";\nimport { PaymentPlanCard } from \"~/components/paymentplan_card\";\nimport { XMarkIcon } from \"@heroicons/react/20/solid\";\nimport React from \"react\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport type { ActionArgs, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport api from \"~/services/api.server\";\nimport { getAuth } from \"@clerk/remix/ssr.server\";\nimport { getUserEmail } from \"~/routes/dashboard\";\n\nexport async function action({ request }: ActionArgs) {\n  const form = await request.formData();\n  let paymentPlanId = form.get(\"payment_plan_id\");\n\n  if (typeof paymentPlanId !== \"string\") {\n    return json(\n      { error: `Invalid Form Data Wrong Type`, fields: { paymentPlanId } },\n      { status: 400 }\n    );\n  }\n\n  const resp = await api.paymentplan.delete_payment_plan(paymentPlanId);\n  console.log(resp);\n\n  return redirect(\"/paymentplans\");\n}\n\nexport const loader: LoaderFunction = async (args) => {\n  const { userId } = await getAuth(args);\n  if (!userId) {\n    return redirect(\"/sign-in\");\n  }\n  const email = await getUserEmail(userId);\n  const paymentPlans: GetPaymentPlansResponse =\n    await api.paymentplan.get_user_payment_plans(email);\n  return { paymentPlans };\n};\n\nexport default function PaymentPlans() {\n  const { paymentPlans } = useLoaderData();\n  return (\n    <Card marginTop=\"mt-6\">\n      <main>\n        <Title>Payment Plans</Title>\n        <Text>\n          These are all of your payment plans. Your plans tell you how much you\n          need to pay and when.\n        </Text>\n        <Text>\n          If you have a premium account these payments will be managed\n          automatically!\n        </Text>\n        <PaymentPlanCard plans={paymentPlans.data} footer={PlanFooter} />\n      </main>\n    </Card>\n  );\n}\n\nconst PlanFooter = (paymentPlanId: string) => {\n  const handleOnSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    return !confirm(\"Are you sure?\") ? e.preventDefault() : true;\n  };\n\n  return (\n    <Form method=\"delete\" onSubmit={handleOnSubmit}>\n      <input type=\"hidden\" value={paymentPlanId} name=\"payment_plan_id\" />\n      <Footer>\n        <Button\n          type=\"submit\"\n          variant=\"light\"\n          size=\"sm\"\n          text=\"Delete\"\n          icon={XMarkIcon}\n          iconPosition=\"left\"\n          color=\"red\"\n        />\n      </Footer>\n    </Form>\n  );\n};\n", "import {\n  Accordion,\n  AccordionBody,\n  AccordionHeader,\n  Badge,\n  Bold,\n  Card,\n  Col,\n  ColGrid,\n  Flex,\n  List,\n  ListItem,\n  Metric,\n  Text,\n  Title,\n} from \"@tremor/react\";\nimport {\n  ArrowDownCircleIcon,\n  ArrowUpCircleIcon,\n} from \"@heroicons/react/24/outline\";\nimport { cleanDate, toUSD } from \"~/utils/helpers\";\nimport {\n  ActionStatus,\n  PaymentFrequency,\n  PlanType,\n  TimelineMonths,\n} from \"~/utils/constants\";\nimport React from \"react\";\nimport type { PaymentPlan } from \"~/utils/types.server\";\n\ninterface props {\n  plans: PaymentPlan[];\n  footer?: (paymentPlanId: string) => JSX.Element;\n}\n\nexport const PaymentPlanCard: React.FC<props> = ({ plans, footer }) => {\n  if (!plans || plans.length === 0) {\n    return (\n      <Card>\n        <Text>You have no payment plans.</Text>\n      </Card>\n    );\n  }\n\n  const numcols = plans.length >= 2 ? 2 : 1;\n  return (\n    <ColGrid numColsMd={numcols} gapX=\"gap-x-6\" gapY=\"gap-y-6\" marginTop=\"mt-6\">\n      {plans.map((plan, idx) => (\n        <Col key={`${plan.name}_${idx}`}>\n          <Card>\n            <ColGrid numCols={2} gapX=\"gap-x-2\" gapY=\"gap-y-2\">\n              <Col numColSpan={2}>\n                <Flex alignItems=\"items-start\">\n                  <Title>{plan.name}</Title>\n                  <Badge\n                    text={PlanType.get(plan.plan_type) || \"\"}\n                    color=\"green\"\n                    size=\"sm\"\n                    icon={\n                      plan.plan_type === 1\n                        ? ArrowUpCircleIcon\n                        : ArrowDownCircleIcon\n                    }\n                  />\n                </Flex>\n              </Col>\n              <Col numColSpan={2}>\n                <Flex\n                  justifyContent=\"justify-start\"\n                  alignItems=\"items-baseline\"\n                  spaceX=\"space-x-1\"\n                >\n                  <Metric marginTop=\"mt-2\">{toUSD(plan.amount)}</Metric>\n                  <Text>\n                    /<Bold>{toUSD(plan.amount_per_payment)}</Bold> per payment\n                    avg\n                  </Text>\n                </Flex>\n              </Col>\n              <Col numColSpan={2}>\n                <Text>Last Payment: {cleanDate(plan.end_date)}</Text>\n              </Col>\n              <Col>\n                <Text marginTop=\"mt-2\">\n                  <Bold>{PaymentFrequency.get(plan.payment_freq)}</Bold>\n                </Text>\n              </Col>\n              <Col>\n                <Text textAlignment=\"text-right\" marginTop=\"mt-2\">\n                  <Bold>\n                    {TimelineMonths.get(plan.timeline)} (\n                    {plan.payment_action.length} payments)\n                  </Bold>\n                </Text>\n              </Col>\n              <Col numColSpan={2}>\n                <Accordion marginTop=\"mt-3\">\n                  <AccordionHeader>Payments Schedule</AccordionHeader>\n                  <AccordionBody>\n                    <List>\n                      <ListItem>\n                        <span>\n                          <strong>Account</strong>\n                        </span>\n                        <span>\n                          <strong>Amount ($)</strong>\n                        </span>\n                        <span>\n                          <strong>Date</strong>\n                        </span>\n                        <span> </span>\n                        <span>\n                          <strong>Status</strong>\n                        </span>\n                      </ListItem>\n                      {plan.payment_action.map((action, idx) => (\n                        <ListItem key={`${action.id}_${idx}`}>\n                          <span>{action.account_id.slice(0, 4)}</span>\n                          <span>{toUSD(action.amount)}</span>\n                          <span>{cleanDate(action.transaction_date)}</span>\n                          <span>{ActionStatus.get(action.status)}</span>\n                        </ListItem>\n                      ))}\n                    </List>\n                  </AccordionBody>\n                </Accordion>\n              </Col>\n            </ColGrid>\n            <>{footer && footer(plan.payment_plan_id)}</>\n          </Card>\n        </Col>\n      ))}\n    </ColGrid>\n  );\n};\n", "export const toUSD = (value: number, digits = 2) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    maximumFractionDigits: digits, // (causes 2500.99 to be printed as $2,501)\n  });\n  return formatter.format(value);\n};\n\nconst month = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport const getMonth = (val: number) => {\n  return month[val];\n};\n\nexport function mapToJson(map: Map<string, any>) {\n  return JSON.stringify(Array.from(map.entries()));\n}\n\nexport function jsonToMap(jsonStr: string): Map<string, any> {\n  return new Map(JSON.parse(jsonStr));\n}\n\nexport const valueFormatter = (number: number) =>\n  `$ ${Intl.NumberFormat(\"us\").format(number).toString()}`;\n\nexport function cleanDate(date: string) {\n  if (!date) return \"\";\n  // Tue, 01 Aug 2023 23:15:39 GMT\n  const dateArr = date.split(\" \");\n  const month = dateArr[2];\n  const day = dateArr[1];\n  const year = dateArr[3];\n  return `${month}-${day}-${year}`;\n}\n", "export const PLAID_FRONTEND_URL =\n  process.env.PLAID_FRONTEND_URL || \"https://zero-react-plaid.vercel.app\";\nexport const PlanType: Map<number, string> = new Map([\n  [0, \"Unknown\"],\n  [1, \"Optimize Credit Score\"],\n  [2, \"Minimize Fees\"],\n]);\n\nexport const PaymentFrequency: Map<number, string> = new Map([\n  [0, \"Unknown\"],\n  [1, \"Weekly\"],\n  [2, \"Bi-Weekly\"],\n  [3, \"Monthly\"],\n  [4, \"Quarterly\"],\n]);\n\nexport const TimelineMonths: Map<number, string> = new Map([\n  [0, \"Unknown\"],\n  [3, \"3 Months\"],\n  [6, \"6 Months\"],\n  [12, \"12 Months\"],\n  [24, \"24 Months\"],\n]);\n\nexport const ActionStatus: Map<number, string> = new Map([\n  [0, \"Unknown\"],\n  [1, \"Pending\"],\n  [2, \"Completed\"],\n  [3, \"Missed\"],\n]);\n", "import type { AxiosError, AxiosResponse } from \"axios\";\nimport axios from \"axios\";\nimport type { BaseResponse } from \"~/utils/types.server\";\n\nlet token: null = null;\n\naxios.defaults.baseURL =\n  process.env.BACKEND_SERVER_URL || \"http://127.0.0.1:8080\";\n\naxios.interceptors.request.use((config) => {\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\naxios.interceptors.response.use(\n  (res) => res,\n  (error: AxiosError) => {\n    const { data, status } = error.response!;\n    switch (status) {\n      case 400:\n        console.error(data);\n        break;\n\n      case 401:\n        console.error(\"unauthorised\");\n        break;\n\n      case 404:\n        console.error(\"/not-found\");\n        break;\n\n      case 500:\n        console.error(\"/server-error\");\n        break;\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nexport const request = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) =>\n    axios.post<T>(url, body).then(responseBody),\n  delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nexport const backend = {\n  home: () => request.get<BaseResponse>(\"/\"),\n};\n", "import type {\n  Account,\n  AccountsResponse,\n  SlimAccount,\n} from \"~/utils/types.server\";\nimport { request } from \"~/services/external-api.service.server\";\n\nexport const accounts = {\n  get_user_accounts: async (email: string) =>\n    request.get<AccountsResponse>(`/api/core/accounts/${email}`),\n};\n\nexport const makeAccountFromJson = async (data: Account[]) => {\n  let accounts: SlimAccount[] = [];\n  data.forEach((item) => {\n    if (item.type === \"credit\") {\n      accounts.push({\n        accountId: item.id,\n        userId: item.user_id,\n        name: item.official_name,\n        balance: item.available_balance,\n      });\n    }\n  });\n  return accounts;\n};\n", "import { request } from \"~/services/external-api.service.server\";\nimport type { KPIResponse } from \"~/utils/types.server\";\n\nexport const kpis = {\n  get_user_kpis: async (email: string) =>\n    request.get<KPIResponse>(`/api/core/kpi/${email}`),\n};\n", "import { request } from \"~/services/external-api.service.server\";\nimport type {\n  SlimWaterfall,\n  Waterfall,\n  WaterfallDataResponse,\n  WaterfallDataSeries,\n  WaterfallResponse,\n} from \"~/utils/types.server\";\nimport { getMonth } from \"~/utils/helpers\";\n\nexport const waterfall = {\n  get_user_waterfall: async (email: string) =>\n    request.get<WaterfallResponse>(`/api/planning/waterfall/${email}`),\n};\n\nconst toSlimWaterfall = (data: Waterfall): SlimWaterfall => {\n  const nameParts = data.name.split(\" \");\n  let newName = data.name;\n  if (nameParts.length > 1) {\n    newName = nameParts.slice(0, 2).join(\" \");\n  }\n  return {\n    planName: newName,\n    planId: data.acc_id,\n    data: data.data,\n  };\n};\n\nconst fill_data = (waterfallPlans: SlimWaterfall[]) => {\n  let data: WaterfallDataSeries[] = [...Array(12).keys()].map((mon) => ({\n    Month: getMonth(mon),\n  }));\n  for (const sw of waterfallPlans) {\n    sw.data.forEach((num, i) => {\n      const newData = { [sw.planName]: num };\n      data[i] = { ...data[i], ...newData };\n    });\n  }\n  return data;\n};\n\nconst getNames = (waterfallPlans: SlimWaterfall[]) => {\n  const names: string[] = [];\n  for (const sw of waterfallPlans) {\n    names.push(sw.planName);\n  }\n  return names;\n};\n\nexport const makeWaterfallFromJson = (\n  input: WaterfallResponse\n): WaterfallDataResponse => {\n  if (!input.data || input.data.length === 0) {\n    return { waterfallData: [], names: [] };\n  }\n\n  let waterfallPlans: SlimWaterfall[] = [];\n  input.data.map((item) => waterfallPlans.push(toSlimWaterfall(item)));\n  const wp: SlimWaterfall[] = waterfallPlans.sort(\n    (a, b) => sumOfAmount(b) - sumOfAmount(a)\n  );\n\n  return { waterfallData: fill_data(wp), names: getNames(wp) };\n};\n\nfunction sumOfAmount(obj: SlimWaterfall) {\n  return obj.data.reduce((a: number, b: number) => a + b, 0);\n}\n", "import { request } from \"~/services/external-api.service.server\";\nimport type {\n  SlimTransaction,\n  Transaction,\n  TransactionResponse,\n} from \"~/utils/types.server\";\nimport { toUSD } from \"~/utils/helpers\";\n\nconst TRANSACTION_LIMIT = 100;\n\nexport const transactions = {\n  get_user_transactions: async (email: string) =>\n    request.get<TransactionResponse>(`/api/core/transactions/${email}`),\n};\n\nexport const pruneTransactions = async (\n  trxns: Transaction[]\n): Promise<SlimTransaction[]> => {\n  let data: SlimTransaction[] = [];\n  trxns.forEach((item) => {\n    if (item.amount > 0) {\n      data.push({\n        transactionId: item.id,\n        name: item.name,\n        amount: toUSD(item.amount),\n        date: item.date,\n        id: item.id,\n        accountId: item.account_id,\n        userId: item.user_id,\n      });\n    }\n  });\n  return data.slice(0, Math.min(data.length, TRANSACTION_LIMIT));\n};\n", "export type BaseResponse = {\n  message: string;\n};\n\nexport type AnnualPercentageRate = {\n  apr_percentage: number;\n  apr_type: string;\n  balance_subject_to_apr: number;\n  interest_charge_amount: number;\n};\n\nexport type Account = {\n  id: string;\n  plaid_account_id: string;\n  user_id: string;\n  name: string;\n  official_name: string;\n  type: string;\n  subtype: string;\n  available_balance: number;\n  current_balance: number;\n  credit_limit: number;\n  iso_currency_code: string;\n  annual_percentage_rate: AnnualPercentageRate[];\n  is_overdue: boolean;\n  last_payment_amount: number;\n  last_statement_issue_date: string;\n  last_statement_balance: number;\n  minimum_payment_amount: number;\n  next_payment_due_date: string;\n  updated_at: string;\n  created_at: string;\n};\n\nexport type SlimAccount = {\n  accountId: string;\n  userId: string;\n  name: string;\n  balance: number;\n};\n\nexport type AccountsResponse = {\n  data: Account[];\n  message: string;\n  status: string;\n};\n\nexport type KPI = {\n  debit: number;\n  credit: number;\n  payment_plans: number;\n};\n\nexport type KPIResponse = {\n  data: KPI;\n  message: string;\n  status: string;\n};\n\nexport type Waterfall = {\n  name: string;\n  data: number[];\n  acc_id: string;\n};\n\nexport type WaterfallResponse = {\n  data: Waterfall[];\n  message: string;\n  status: string;\n};\n\nexport type SlimWaterfall = {\n  planName: string;\n  planId: string;\n  data: number[];\n};\n\ntype TransactionDetails = {\n  address: string;\n  city: string;\n  state: string;\n  zipcode: string;\n  country: string;\n  store_number: string;\n  reference_number: string;\n};\n\nexport type Transaction = {\n  id: string;\n  plaid_transaction_id: string;\n  account_id: string;\n  plaid_account_id: string;\n  user_id: string;\n  transaction_type: string;\n  pending_transaction_id: string;\n  category_id: string;\n  category: string[];\n  transaction_details: TransactionDetails;\n  name: string;\n  original_description: string;\n  amount: number;\n  iso_currency_code: string;\n  date: string;\n  pending: boolean;\n  merchant_name: string;\n  payment_channel: string;\n  authorized_date: string;\n  primary_category: string;\n  detailed_category: string;\n  updated_at: string;\n  created_at: string;\n};\n\nexport type TransactionResponse = {\n  data: Transaction[];\n  message: string;\n  status: string;\n};\n\nexport type SlimTransaction = {\n  id: string;\n  accountId: string;\n  userId: string;\n  name: string;\n  amount: string;\n  date: string;\n  transactionId: string;\n};\n\nexport type DropdownInput = {\n  value: number;\n  text: string;\n  icon: any;\n};\n\nexport class DefaultDict {\n  constructor(defaultInit: any | Object) {\n    return new Proxy(\n      {},\n      {\n        get: (target: any, name: string) =>\n          name in target\n            ? target[name]\n            : (target[name] =\n                typeof defaultInit === \"function\"\n                  ? new defaultInit().valueOf()\n                  : defaultInit),\n      }\n    );\n  }\n}\n\nexport type AccountAndTransactions = {\n  slimAccounts: SlimAccount[];\n  transactionDict: DefaultDict;\n};\n\nexport type AccountInfo = {\n  transaction_ids: string[];\n  account_id: string;\n  amount: number;\n};\n\nexport type CreatePaymentPlanRequest = {\n  account_info: AccountInfo[];\n  meta_data: {\n    preferred_plan_type: number;\n    preferred_timeline_in_months: number;\n    preferred_payment_freq: number;\n  };\n  save_plan: boolean;\n};\n\nexport type PaymentAction = {\n  id: string;\n  account_id: string;\n  amount: number;\n  transaction_date: string;\n  status: number;\n};\n\nexport type PaymentPlan = {\n  id: string;\n  name: string;\n  payment_plan_id: string;\n  user_id: string;\n  payment_task_id: string[];\n  amount: number;\n  timeline: number;\n  payment_freq: number;\n  amount_per_payment: number;\n  plan_type: number;\n  end_date: string;\n  active: boolean;\n  status: number;\n  payment_action: PaymentAction[];\n};\n\nexport type CreatePaymentPlanResponse = {\n  data: PaymentPlan[];\n  message: string;\n  status: string;\n};\n\nexport type PlaidAccountLinked = {\n  debit: boolean;\n  credit: boolean;\n};\n\nexport type PlaidAccountLinkedResponse = {\n  data: PlaidAccountLinked;\n  message: string;\n  status: string;\n};\n\nenum DeleteStatus {\n  DELETE_STATUS_UNKNOWN = 0,\n  DELETE_STATUS_PENDING,\n  DELETE_STATUS_IN_PROGRESS,\n  DELETE_STATUS_SUCCESS,\n  DELETE_STATUS_FAILED,\n}\n\nexport type DeletePaymentPlanResponse = {\n  status: DeleteStatus;\n  payment_plan: PaymentPlan;\n};\n\nexport type GetPaymentPlansResponse = {\n  data: PaymentPlan[];\n  message: string;\n  status: string;\n};\n\nexport type WaterfallDataSeries = {\n  [key: string]: string | number;\n};\n\nexport type WaterfallDataResponse = {\n  waterfallData: WaterfallDataSeries[];\n  names: string[];\n};\n", "// To parse this data:\n//\n//   import { Convert, PaymentPlanRequest } from \"./file\";\n//\n//   const paymentPlanRequest = Convert.toPaymentPlanRequest(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface PaymentPlanRequest {\n  account_info: AccountInfo[];\n  meta_data: MetaData;\n  save_plan: boolean;\n}\n\nexport interface AccountInfo {\n  transaction_ids: string[];\n  account_id: string;\n  amount: number;\n}\n\nexport interface MetaData {\n  preferred_plan_type: number;\n  preferred_timeline_in_months: number;\n  preferred_payment_freq: number;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n  public static toPaymentPlanRequest(json: string): PaymentPlanRequest {\n    return cast(JSON.parse(json), r(\"PaymentPlanRequest\"));\n  }\n\n  public static paymentPlanRequestToJson(value: PaymentPlanRequest): string {\n    return JSON.stringify(uncast(value, r(\"PaymentPlanRequest\")), null, 2);\n  }\n}\n\nfunction invalidValue(typ: any, val: any, key: any, parent: any = \"\"): never {\n  const prettyTyp = prettyTypeName(typ);\n  const parentText = parent ? ` on ${parent}` : \"\";\n  const keyText = key ? ` for key \"${key}\"` : \"\";\n  throw Error(\n    `Invalid value${keyText}${parentText}. Expected ${prettyTyp} but got ${JSON.stringify(\n      val\n    )}`\n  );\n}\n\nfunction prettyTypeName(typ: any): string {\n  if (Array.isArray(typ)) {\n    if (typ.length === 2 && typ[0] === undefined) {\n      return `an optional ${prettyTypeName(typ[1])}`;\n    } else {\n      return `one of [${typ\n        .map((a) => {\n          return prettyTypeName(a);\n        })\n        .join(\", \")}]`;\n    }\n  } else if (typeof typ === \"object\" && typ.literal !== undefined) {\n    return typ.literal;\n  } else {\n    return typeof typ;\n  }\n}\n\nfunction jsonToJSProps(typ: any): any {\n  if (typ.jsonToJS === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.json] = { key: p.js, typ: p.typ }));\n    typ.jsonToJS = map;\n  }\n  return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n  if (typ.jsToJSON === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.js] = { key: p.json, typ: p.typ }));\n    typ.jsToJSON = map;\n  }\n  return typ.jsToJSON;\n}\n\nfunction transform(\n  val: any,\n  typ: any,\n  getProps: any,\n  key: any = \"\",\n  parent: any = \"\"\n): any {\n  function transformPrimitive(typ: string, val: any): any {\n    if (typeof typ === typeof val) return val;\n    return invalidValue(typ, val, key, parent);\n  }\n\n  function transformUnion(typs: any[], val: any): any {\n    // val must validate against one typ in typs\n    const l = typs.length;\n    for (let i = 0; i < l; i++) {\n      const typ = typs[i];\n      try {\n        return transform(val, typ, getProps);\n      } catch (_) {}\n    }\n    return invalidValue(typs, val, key, parent);\n  }\n\n  function transformEnum(cases: string[], val: any): any {\n    if (cases.indexOf(val) !== -1) return val;\n    return invalidValue(\n      cases.map((a) => {\n        return l(a);\n      }),\n      val,\n      key,\n      parent\n    );\n  }\n\n  function transformArray(typ: any, val: any): any {\n    // val must be an array with no invalid elements\n    if (!Array.isArray(val)) return invalidValue(l(\"array\"), val, key, parent);\n    return val.map((el) => transform(el, typ, getProps));\n  }\n\n  function transformDate(val: any): any {\n    if (val === null) {\n      return null;\n    }\n    const d = new Date(val);\n    if (isNaN(d.valueOf())) {\n      return invalidValue(l(\"Date\"), val, key, parent);\n    }\n    return d;\n  }\n\n  function transformObject(\n    props: { [k: string]: any },\n    additional: any,\n    val: any\n  ): any {\n    if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n      return invalidValue(l(ref || \"object\"), val, key, parent);\n    }\n    const result: any = {};\n    Object.getOwnPropertyNames(props).forEach((key) => {\n      const prop = props[key];\n      const v = Object.prototype.hasOwnProperty.call(val, key)\n        ? val[key]\n        : undefined;\n      result[prop.key] = transform(v, prop.typ, getProps, key, ref);\n    });\n    Object.getOwnPropertyNames(val).forEach((key) => {\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\n        result[key] = transform(val[key], additional, getProps, key, ref);\n      }\n    });\n    return result;\n  }\n\n  if (typ === \"any\") return val;\n  if (typ === null) {\n    if (val === null) return val;\n    return invalidValue(typ, val, key, parent);\n  }\n  if (typ === false) return invalidValue(typ, val, key, parent);\n  let ref: any = undefined;\n  while (typeof typ === \"object\" && typ.ref !== undefined) {\n    ref = typ.ref;\n    typ = typeMap[typ.ref];\n  }\n  if (Array.isArray(typ)) return transformEnum(typ, val);\n  if (typeof typ === \"object\") {\n    return typ.hasOwnProperty(\"unionMembers\")\n      ? transformUnion(typ.unionMembers, val)\n      : typ.hasOwnProperty(\"arrayItems\")\n      ? transformArray(typ.arrayItems, val)\n      : typ.hasOwnProperty(\"props\")\n      ? transformObject(getProps(typ), typ.additional, val)\n      : invalidValue(typ, val, key, parent);\n  }\n  // Numbers can be parsed by Date but shouldn't be.\n  if (typ === Date && typeof val !== \"number\") return transformDate(val);\n  return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n  return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n  return transform(val, typ, jsToJSONProps);\n}\n\nfunction l(typ: any) {\n  return { literal: typ };\n}\n\nfunction a(typ: any) {\n  return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n  return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n  return { props, additional };\n}\n\nfunction m(additional: any) {\n  return { props: [], additional };\n}\n\nfunction r(name: string) {\n  return { ref: name };\n}\n\nconst typeMap: any = {\n  PaymentPlanRequest: o(\n    [\n      { json: \"account_info\", js: \"account_info\", typ: a(r(\"AccountInfo\")) },\n      { json: \"meta_data\", js: \"meta_data\", typ: r(\"MetaData\") },\n      { json: \"save_plan\", js: \"save_plan\", typ: true },\n    ],\n    false\n  ),\n  AccountInfo: o(\n    [\n      { json: \"transaction_ids\", js: \"transaction_ids\", typ: a(\"\") },\n      { json: \"account_id\", js: \"account_id\", typ: \"\" },\n      { json: \"amount\", js: \"amount\", typ: 3.14 },\n    ],\n    false\n  ),\n  MetaData: o(\n    [\n      { json: \"preferred_plan_type\", js: \"preferred_plan_type\", typ: 0 },\n      {\n        json: \"preferred_timeline_in_months\",\n        js: \"preferred_timeline_in_months\",\n        typ: 0,\n      },\n      { json: \"preferred_payment_freq\", js: \"preferred_payment_freq\", typ: 0 },\n    ],\n    false\n  ),\n};\n", "import { request } from \"~/services/external-api.service.server\";\nimport type {\n  AccountAndTransactions,\n  AccountsResponse,\n  CreatePaymentPlanResponse,\n  DeletePaymentPlanResponse,\n  GetPaymentPlansResponse,\n  SlimAccount,\n  Transaction,\n  TransactionResponse,\n} from \"~/utils/types.server\";\nimport { DefaultDict } from \"~/utils/types.server\";\nimport { makeAccountFromJson } from \"~/services/accounts.server\";\nimport { toUSD } from \"~/utils/helpers\";\nimport { Convert } from \"~/utils/paymentplan_request_converter.server\";\n\nexport const paymentplan = {\n  get_transactions_by_account: async (email: string) => {\n    const accounts: AccountsResponse = await request.get<AccountsResponse>(\n      `/api/core/accounts/${email}`\n    );\n    const transactions: TransactionResponse =\n      await request.get<TransactionResponse>(`/api/core/transactions/${email}`);\n\n    const slimAccounts: SlimAccount[] = await makeAccountFromJson(\n      accounts.data\n    );\n    const transactionDict: DefaultDict = await makeTransactionsFromJson(\n      transactions.data\n    );\n    const resp: AccountAndTransactions = { slimAccounts, transactionDict };\n    return resp;\n  },\n  submit_payment_plan: async (email: string, json: string) => {\n    const paymentPlanRequest = Convert.toPaymentPlanRequest(json);\n    paymentPlanRequest.account_info = paymentPlanRequest.account_info.filter(\n      (account) => account.transaction_ids.length > 0\n    );\n    return await request.post<CreatePaymentPlanResponse>(\n      `/api/core/paymentplan/${email}`,\n      paymentPlanRequest\n    );\n  },\n  delete_payment_plan: async (paymentPlanId: string) => {\n    return await request.delete<DeletePaymentPlanResponse>(\n      `/api/core/paymentplan/${paymentPlanId}`\n    );\n  },\n  get_user_payment_plans: async (email: string) => {\n    return await request.get<GetPaymentPlansResponse>(\n      `/api/core/paymentplan/${email}`\n    );\n  },\n};\n\nexport const makeTransactionsFromJson = async (trxns: Transaction[]) => {\n  const transactionsDict = new DefaultDict(Array);\n  trxns.forEach((item) => {\n    if (item.amount > 0) {\n      // @ts-ignore\n      transactionsDict[item[\"account_id\"]].push({\n        id: item[\"id\"],\n        accountId: item[\"account_id\"],\n        userId: item[\"user_id\"],\n        name: item.name,\n        amount: toUSD(item.amount),\n        date: item.date,\n        transactionId: item[\"id\"],\n      });\n    }\n  });\n  return transactionsDict;\n};\n", "import { request } from \"~/services/external-api.service.server\";\nimport type { PlaidAccountLinkedResponse } from \"~/utils/types.server\";\nimport { PLAID_FRONTEND_URL } from \"~/utils/constants\";\n\nexport const plaid = {\n  is_plaid_linked: async (email: string) => {\n    return await request.get<PlaidAccountLinkedResponse>(\n      `/api/plaid/linked/${email}`\n    );\n  },\n};\n\nexport const plaid_url = (email: string, type: string) => {\n  return `${PLAID_FRONTEND_URL}/${type}?email=${email}`;\n};\n", "import { backend } from \"~/services/external-api.service.server\";\nimport { accounts } from \"~/services/accounts.server\";\nimport { kpis } from \"~/services/kpi.server\";\nimport { waterfall } from \"~/services/waterfall\";\nimport { transactions } from \"~/services/transactions.server\";\nimport { paymentplan } from \"~/services/paymentplan.server\";\nimport { plaid } from \"~/services/plaid.server\";\n\nconst api = {\n  backend,\n  accounts,\n  kpis,\n  waterfall,\n  transactions,\n  paymentplan,\n  plaid,\n};\n\nexport default api;\n", "import type { ActionArgs, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Outlet, useLoaderData } from \"@remix-run/react\";\nimport { getAuth } from \"@clerk/remix/ssr.server\";\nimport api from \"~/services/api.server\";\nimport type {\n  KPIResponse,\n  PlaidAccountLinkedResponse,\n  SlimTransaction,\n  TransactionResponse,\n  WaterfallDataResponse,\n  WaterfallResponse,\n} from \"~/utils/types.server\";\nimport { Waterfall } from \"~/components/waterfall\";\nimport { KpiPanel } from \"~/components/kpi_panel\";\nimport { Block, Button, Card, Flex } from \"@tremor/react\";\nimport { makeWaterfallFromJson } from \"~/services/waterfall\";\nimport { TransactionsTableWithPagination } from \"~/components/transactions_table_with_pagination\";\nimport { pruneTransactions } from \"~/services/transactions.server\";\nimport { createClerkClient } from \"@clerk/remix/api.server\";\nimport React from \"react\";\nimport { plaid_url } from \"~/services/plaid.server\";\n\ninterface DashboardLoaderData {\n  kpis: KPIResponse;\n  waterfall: WaterfallDataResponse;\n  transactions: SlimTransaction[];\n}\n\nexport const getUserEmail = async (userId: string): Promise<string> => {\n  const { emailAddresses } = await createClerkClient({\n    apiKey: process.env.CLERK_SECRET_KEY,\n  }).users.getUser(userId);\n\n  if (!emailAddresses || emailAddresses.length === 0) {\n    throw new Error(\"No email address found for user\");\n  }\n\n  return emailAddresses[0].emailAddress;\n};\n\nexport const getDashboardLoaderData = async (\n  email: string\n): Promise<DashboardLoaderData> => {\n  const trxnResp: TransactionResponse =\n    await api.transactions.get_user_transactions(email);\n  const transactions: SlimTransaction[] = await pruneTransactions(\n    trxnResp.data\n  );\n  const kpis: KPIResponse = await api.kpis.get_user_kpis(email);\n  const resp: WaterfallResponse = await api.waterfall.get_user_waterfall(email);\n  const waterfall = makeWaterfallFromJson(resp);\n  return { kpis, waterfall, transactions };\n};\n\nexport async function action({ request }: ActionArgs) {\n  const form = await request.formData();\n  const link = form.get(\"link\");\n  const email = form.get(\"email\");\n  if (typeof link === \"string\" && typeof email === \"string\") {\n    return redirect(plaid_url(email, link));\n  }\n  return json({ error: `Invalid Form Data` }, { status: 400 });\n}\n\nexport const loader: LoaderFunction = async (args) => {\n  const { userId } = await getAuth(args);\n  if (!userId) {\n    return redirect(\"/sign-in\");\n  }\n\n  const email = await getUserEmail(userId);\n  const { kpis, waterfall, transactions } = await getDashboardLoaderData(email);\n\n  const plaidLinked: PlaidAccountLinkedResponse =\n    await api.plaid.is_plaid_linked(email);\n\n  return { kpis, waterfall, transactions, plaidLinked, email };\n};\n\nconst Dashboard = (): JSX.Element => {\n  const { kpis, waterfall, transactions, plaidLinked, email } = useLoaderData();\n\n  return (\n    <main>\n      {PlaidButtonsComponent(plaidLinked, email)}\n      <Block marginTop=\"mt-2\">\n        <Waterfall waterfall={waterfall} />\n      </Block>\n      <Block marginTop=\"mt-2\">\n        <KpiPanel kpis={kpis} />\n      </Block>\n      <Block marginTop=\"mt-2\">\n        <TransactionsTableWithPagination transactions={transactions} />\n      </Block>\n      <div className=\"preContainer\"></div>\n      <Outlet />\n    </main>\n  );\n};\n\nconst PlaidButtonsComponent = (\n  plaidLinked: PlaidAccountLinkedResponse,\n  email: string\n): JSX.Element => {\n  return (\n    <Card maxWidth=\"max-w-md\">\n      <Form method=\"post\">\n        <Flex\n          justifyContent=\"justify-center\"\n          alignItems=\"items-center\"\n          spaceX=\"space-x-6\"\n          truncate={true}\n          marginTop=\"mt-0\"\n        >\n          <input type=\"hidden\" name=\"email\" value={email} />\n          {!plaidLinked?.data?.debit ? (\n            <>\n              <input type=\"hidden\" name=\"link\" value=\"debit\" />\n              <Button type=\"submit\" size=\"sm\">\n                Link Debit account\n              </Button>\n            </>\n          ) : null}\n          <input type=\"hidden\" name=\"link\" value=\"credit\" />\n          {!plaidLinked?.data?.credit ? (\n            <Button type=\"submit\" size=\"sm\">\n              Link Credit account\n            </Button>\n          ) : (\n            <Button type=\"submit\" size=\"sm\">\n              Link Another Credit account\n            </Button>\n          )}\n        </Flex>\n      </Form>\n    </Card>\n  );\n};\n\nexport default Dashboard;\n", "import {\n  BarChart,\n  Button,\n  Card,\n  Col,\n  ColGrid,\n  Text,\n  Title,\n} from \"@tremor/react\";\nimport React from \"react\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { valueFormatter } from \"~/utils/helpers\";\nimport type { WaterfallDataResponse } from \"~/utils/types.server\";\n\ninterface props {\n  waterfall: WaterfallDataResponse;\n}\n\nexport const Waterfall: React.FC<props> = ({ waterfall }) => {\n  const navigate = useNavigate();\n\n  const handleModal = () => {\n    navigate(\"paymentplan\");\n  };\n\n  return (\n    <Card marginTop=\"mt-6\">\n      <ColGrid numCols={2} gapX=\"gap-x-6\" gapY=\"gap-y-6\">\n        <Col>\n          <Title>Payment Plan Waterfall</Title>\n          <Text>Monthly payments due for each plan this year (2023)</Text>\n        </Col>\n        <Col>\n          <div className=\"flex flex-col items-right md:flex-row\">\n            <div className=\"flex-1\" />\n            <Button onClick={handleModal}>PaymentPlan Creation</Button>\n          </div>\n        </Col>\n      </ColGrid>\n      <BarChart\n        marginTop=\"mt-4\"\n        data={waterfall.waterfallData}\n        dataKey=\"Month\"\n        categories={waterfall.names}\n        colors={[\"indigo\", \"fuchsia\", \"amber\"]}\n        stack={true}\n        valueFormatter={valueFormatter}\n        height=\"h-80\"\n      />\n    </Card>\n  );\n};\n", "import { Card, Metric, Text, Icon, Block, ColGrid } from \"@tremor/react\";\nimport {\n  ChartBarIcon,\n  CreditCardIcon,\n  CurrencyDollarIcon,\n} from \"@heroicons/react/24/solid\";\nimport { toUSD } from \"~/utils/helpers\";\nimport type { KPI, KPIResponse } from \"~/utils/types.server\";\nimport React from \"react\";\n\ninterface KpiInfo {\n  title: string;\n  metric: string;\n  icon: any;\n}\n\ninterface KpiCards {\n  debit: KpiInfo;\n  credit: KpiInfo;\n  plans: KpiInfo;\n}\n\ninterface props {\n  kpis: KPIResponse;\n}\n\nconst toCategories = (props: KPI): KpiCards => {\n  const d: KpiInfo = {\n    title: \"Debit\",\n    metric: toUSD(props.debit, 0),\n    icon: CurrencyDollarIcon,\n  };\n  const c: KpiInfo = {\n    title: \"Credit\",\n    metric: toUSD(props.credit, 0),\n    icon: CreditCardIcon,\n  };\n  const p: KpiInfo = {\n    title: \"PaymentPlans\",\n    metric: toUSD(props.payment_plans, 0),\n    icon: ChartBarIcon,\n  };\n  return { credit: c, debit: d, plans: p };\n};\n\nexport const KpiPanel: React.FC<props> = ({ kpis }) => {\n  const categories = Object.values(toCategories(kpis.data));\n  return (\n    <ColGrid numColsSm={2} numColsLg={3} gapX=\"gap-x-6\" gapY=\"gap-y-6\">\n      {categories.map((item) => (\n        <Card key={item.title}>\n          <Block textAlignment=\"text-center\">\n            <Icon icon={item.icon} variant=\"light\" size=\"sm\" />\n            <Metric textAlignment=\"text-center\" marginTop=\"mt-2\">\n              {item.metric}\n            </Metric>\n            <Text textAlignment=\"text-center\">{item.title}</Text>\n          </Block>\n        </Card>\n      ))}\n    </ColGrid>\n  );\n};\n", "import {\n  Card,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeaderCell,\n  TableRow,\n  Title,\n} from \"@tremor/react\";\nimport React, { useEffect, useState } from \"react\";\nimport type { SlimTransaction } from \"~/utils/types.server\";\nimport Pagination from \"@mui/material/Pagination\";\nimport Stack from \"@mui/material/Stack\";\n\ninterface props {\n  transactions: SlimTransaction[];\n}\n\nconst ITEMS_PER_PAGE = 5;\nconst initialState: SlimTransaction[] = [];\n\nconst Items: React.FC<props> = ({ transactions }) => {\n  return (\n    <TableBody>\n      {transactions.map((item, idx) => (\n        <TableRow key={`${item.transactionId}_${idx}`}>\n          <TableCell key={`${item.transactionId}_${idx}a`}>\n            {item.name}\n          </TableCell>\n          <TableCell\n            key={`${item.transactionId}_${idx}b`}\n            textAlignment=\"text-right\"\n          >\n            {item.date}\n          </TableCell>\n          <TableCell\n            key={`${item.transactionId}_${idx}c`}\n            textAlignment=\"text-right\"\n          >\n            {item.amount}\n          </TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  );\n};\n\nexport const TransactionsTableWithPagination: React.FC<props> = ({\n  transactions,\n}) => {\n  const [items, setItems] = useState(initialState);\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(initialState);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n\n  // Fetch items from another resources.\n  const endOffset = itemOffset + ITEMS_PER_PAGE;\n\n  const currSelection: SlimTransaction[] = transactions.slice(\n    itemOffset,\n    endOffset\n  );\n\n  useEffect(() => {\n    setCurrentItems(currSelection);\n    setPageCount(Math.ceil(transactions.length / ITEMS_PER_PAGE));\n    setItems(transactions);\n  }, [itemOffset]);\n\n  const handlePageClick = (event: React.ChangeEvent<unknown>, page: number) => {\n    const newOffset = (page * ITEMS_PER_PAGE) % items.length;\n    setItemOffset(newOffset);\n  };\n\n  return (\n    <Card>\n      <Title>Recent Transactions</Title>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableHeaderCell> Name </TableHeaderCell>\n            <TableHeaderCell textAlignment=\"text-right\"> Date </TableHeaderCell>\n            <TableHeaderCell textAlignment=\"text-right\">\n              {\" \"}\n              Amount{\" \"}\n            </TableHeaderCell>\n          </TableRow>\n        </TableHead>\n\n        <Items transactions={currentItems} />\n      </Table>\n      <Divider />\n      <Stack spacing={2}>\n        <Pagination\n          count={pageCount}\n          onChange={handlePageClick}\n          variant=\"outlined\"\n          shape=\"rounded\"\n          color=\"primary\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            boxSizing: \"border-box\",\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        />\n      </Stack>\n    </Card>\n  );\n};\n", "import { Modal } from \"~/components/modal\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { PaymentPlanCard } from \"~/components/paymentplan_card\";\nimport type { CreatePaymentPlanResponse } from \"~/utils/types.server\";\nimport { Text, Title } from \"@tremor/react\";\nimport React from \"react\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url);\n  let encrypted = url.searchParams.get(\"resp\") as string;\n  const decrypted: CreatePaymentPlanResponse = JSON.parse(decodeURI(encrypted));\n  return { decrypted };\n};\n\nexport default function PaymentPlanSummary() {\n  const { decrypted } = useLoaderData();\n  return (\n    <Modal\n      isOpen={true}\n      className=\"tr-overflow-auto p-10\"\n      navigate_path={\"/dashboard\"}\n    >\n      <Title textAlignment=\"text-center\" marginTop=\"mt-2\">\n        New Payment Plan Created!\n      </Title>\n      <Text textAlignment=\"text-center\" marginTop=\"mt-2\">\n        Here is a summary of your new payment plan. You can always view all of\n        your plans on the Payment Plans tab.\n      </Text>\n      <PaymentPlanCard plans={decrypted.data} />\n    </Modal>\n  );\n}\n", "import { createPortal } from \"react-dom\";\nimport type React from \"react\";\nimport { useEffect, useState } from \"react\";\n\ninterface props {\n  children: React.ReactNode;\n  wrapperId: string;\n}\n\nconst createWrapper = (wrapperId: string) => {\n  const wrapper = document.createElement(\"div\");\n  wrapper.setAttribute(\"id\", wrapperId);\n  document.body.appendChild(wrapper);\n  return wrapper;\n};\n\nexport const Portal: React.FC<props> = ({ children, wrapperId }) => {\n  const [wrapper, setWrapper] = useState<HTMLElement | null>(null);\n\n  useEffect(() => {\n    let element = document.getElementById(wrapperId);\n    let created = false;\n\n    if (!element) {\n      created = true;\n      element = createWrapper(wrapperId);\n    }\n\n    setWrapper(element);\n\n    return () => {\n      if (created && element?.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    };\n  }, [wrapperId]);\n\n  if (wrapper === null) return null;\n\n  return createPortal(children, wrapper);\n};\n", "import { Portal } from \"./portal\";\nimport { useNavigate } from \"@remix-run/react\";\nimport React from \"react\";\n\ninterface props {\n  children: React.ReactNode;\n  isOpen: boolean;\n  ariaLabel?: string;\n  className?: string;\n  navigate_path: string;\n}\n\nexport const Modal: React.FC<props> = ({\n  children,\n  isOpen,\n  ariaLabel,\n  className,\n  navigate_path,\n}) => {\n  const navigate = useNavigate();\n  if (!isOpen) return null;\n\n  return (\n    <Portal wrapperId=\"modal\">\n      <div\n        className=\"fixed inset-0 overflow-y-auto bg-gray-600 bg-opacity-80\"\n        aria-labelledby={ariaLabel ?? \"modal-title\"}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        onClick={() => navigate(navigate_path)}\n      ></div>\n      <div className=\"fixed inset-0 pointer-events-none flex justify-center items-center max-h-screen overflow-auto\">\n        <div\n          className={`${className} p-4 bg-gray-200 pointer-events-auto h-4/6 md:rounded-xl`}\n        >\n          {/* This is where the modal content is rendered  */}\n          {children}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n", "import { Modal } from \"~/components/modal\";\nimport { Card, ColGrid, Metric, Text, Title } from \"@tremor/react\";\nimport React from \"react\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport type { AccountAndTransactions, AccountInfo } from \"~/utils/types.server\";\nimport type { ActionArgs, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { getAuth } from \"@clerk/remix/ssr.server\";\nimport api from \"~/services/api.server\";\nimport { getUserEmail } from \"~/routes/dashboard\";\nimport { AccountAccordion } from \"~/components/account_accordion\";\nimport PaymentPlanPreferences from \"~/components/paymentplan_preferences\";\nimport { create } from \"zustand\";\nimport { toUSD } from \"~/utils/helpers\";\n\n// define types for state values and actions separately\ntype State = {\n  timeline: number;\n  frequency: number;\n  planType: number;\n  amount: number[];\n  totalAmount: number;\n  accountInfo: AccountInfo[];\n};\n\ntype Actions = {\n  updateTimeline: (value: number) => void;\n  updateFrequency: (value: number) => void;\n  updatePlanType: (value: number) => void;\n  updateAmount: (amount: number, index: number) => void;\n  setTotalAmount: () => void;\n  updateAccountInfo: (data: AccountInfo, index: number) => void;\n  reset: () => void;\n};\n\n// define the initial state\nconst initialState: State = {\n  timeline: 0,\n  frequency: 0,\n  planType: 0,\n  amount: [],\n  totalAmount: 0,\n  accountInfo: [],\n};\n\n// create store\nexport const usePaymentPlanCreationForm = create<State & Actions>()(\n  (set, get) => ({\n    ...initialState,\n\n    updateTimeline: (value) => set({ timeline: value }),\n    updateFrequency: (value) => set({ frequency: value }),\n    updatePlanType: (value) => set({ planType: value }),\n    updateAmount: (amount, index) => {\n      set((state) => {\n        const newAmount = [...state.amount];\n        newAmount[index] = amount;\n        return { amount: newAmount };\n      });\n    },\n    setTotalAmount: () =>\n      set((state) => ({\n        totalAmount: state.amount.reduce((pv, cv) => pv + cv, 0),\n      })),\n    updateAccountInfo: (data, index) => {\n      set((state) => {\n        const newAccountInfo = [...state.accountInfo];\n        newAccountInfo[index] = data;\n        return { accountInfo: newAccountInfo };\n      });\n    },\n    reset: () => {\n      set(initialState);\n    },\n  })\n);\n\nexport async function action({ request }: ActionArgs) {\n  const form = await request.formData();\n  let timeline = form.get(\"timeline\");\n  let frequency = form.get(\"frequency\");\n  let planType = form.get(\"planType\");\n  let accountInfo = form.get(\"account_info\");\n  let email = form.get(\"email\");\n  const action = form.get(\"_action\");\n\n  switch (action) {\n    case \"submit_preference\":\n      if (\n        typeof timeline !== \"string\" ||\n        typeof frequency !== \"string\" ||\n        typeof planType !== \"string\" ||\n        typeof accountInfo !== \"string\" ||\n        typeof email !== \"string\"\n      ) {\n        return json(\n          {\n            error: `Invalid Form Data Wrong Type`,\n            fields: { timeline, frequency, planType, accountInfo, email },\n          },\n          { status: 400 }\n        );\n      }\n\n      const req = {\n        account_info: JSON.parse(accountInfo),\n        meta_data: {\n          preferred_plan_type: Number(planType),\n          preferred_timeline_in_months: Number(timeline),\n          preferred_payment_freq: Number(frequency),\n        },\n        save_plan: true,\n      };\n\n      const resp = await api.paymentplan.submit_payment_plan(\n        email,\n        JSON.stringify(req)\n      );\n      return redirect(`summary?resp=${encodeURI(JSON.stringify(resp))}`);\n\n    default:\n      return json({ error: `Invalid Form Data` }, { status: 400 });\n  }\n}\n\nexport const loader: LoaderFunction = async (args) => {\n  const { userId } = await getAuth(args);\n  if (!userId) {\n    return redirect(\"/sign-in\");\n  }\n  const email = await getUserEmail(userId);\n  const accountAndTransactions: AccountAndTransactions =\n    await api.paymentplan.get_transactions_by_account(email);\n  return { accountAndTransactions, email };\n};\n\nexport default function PaymentPlanCreation() {\n  const { totalAmount, frequency, timeline, planType, accountInfo, reset } =\n    usePaymentPlanCreationForm((state) => state);\n  const { accountAndTransactions, email } = useLoaderData();\n\n  const handleOnSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    reset();\n    return !confirm(\"Are you sure?\") ? e.preventDefault() : true;\n  };\n\n  return (\n    <Modal\n      isOpen={true}\n      className=\"tr-overflow-auto p-10\"\n      navigate_path={\"/dashboard\"}\n    >\n      <Form method=\"post\" onSubmit={handleOnSubmit}>\n        <input type=\"hidden\" value={frequency} name=\"frequency\" />\n        <input type=\"hidden\" value={timeline} name=\"timeline\" />\n        <input type=\"hidden\" value={planType} name=\"planType\" />\n        <input\n          type=\"hidden\"\n          value={JSON.stringify(accountInfo)}\n          name=\"account_info\"\n        />\n        <input type=\"hidden\" value={email} name=\"email\" />\n        <Title>Create A Payment Plan</Title>\n        <Text>\n          Select the accounts or transactions you'd like to pay-down and select\n          your payment preferences.\n        </Text>\n        <AccountAccordion accountAndTransactions={accountAndTransactions} />\n        <Title marginTop=\"mt-4\">Payment Preferences</Title>\n        <ColGrid\n          numColsMd={4}\n          numColsLg={4}\n          gapX=\"gap-x-4\"\n          gapY=\"gap-y-4\"\n          marginTop=\"mt-3\"\n        >\n          <PaymentPlanPreferences />\n          <Card maxWidth=\"max-w-xs\">\n            <Text textAlignment={\"text-center\"}>Total Amount</Text>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Metric>{toUSD(totalAmount)}</Metric>\n            </div>\n          </Card>\n        </ColGrid>\n        <br />\n        <div className=\"flex flex-col items-center md:flex-row pt-14\">\n          <div className=\"flex-1\" />\n          <button\n            className=\"rounded-xl bg-blue-300 font-semibold text-blue-600 w-56 h-12 transition duration-300 ease-in-out hover:bg-blue-400 hover:-translate-y-1\"\n            name=\"_action\"\n            value=\"submit_preference\"\n          >\n            Send\n          </button>\n        </div>\n      </Form>\n    </Modal>\n  );\n}\n", "import {\n  Accordion,\n  AccordionBody,\n  AccordionHeader,\n  AccordionList,\n  Block,\n} from \"@tremor/react\";\nimport React from \"react\";\nimport type { AccountAndTransactions, SlimAccount } from \"~/utils/types.server\";\nimport { PaymentPlanTransactions } from \"~/components/TrxnTableWithCheckbox/transactions_table_with_checkbox\";\n\ninterface props {\n  accountAndTransactions: AccountAndTransactions;\n}\n\nexport const AccountAccordion: React.FC<props> = ({\n  accountAndTransactions,\n}) => {\n  return (\n    <Block marginTop=\"mt-6\">\n      <AccordionList>\n        {accountAndTransactions.slimAccounts.map(\n          (i: SlimAccount, idx: number) => (\n            <Accordion key={i.accountId}>\n              <AccordionHeader>{i.name}</AccordionHeader>\n              <AccordionBody>\n                <PaymentPlanTransactions\n                  idx={idx}\n                  transactions={\n                    // @ts-ignore\n                    accountAndTransactions.transactionDict[i.accountId]\n                  }\n                  accountId={i.accountId}\n                />\n              </AccordionBody>\n            </Accordion>\n          )\n        )}\n      </AccordionList>\n    </Block>\n  );\n};\n", "import Paper from \"@mui/material/Paper\";\nimport type { FC } from \"react\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport type { SlimTransaction } from \"~/utils/types.server\";\n\nimport type { MRT_ColumnDef } from \"material-react-table\";\nimport MaterialReactTable from \"material-react-table\";\nimport type { RowSelectionState } from \"@tanstack/react-table\";\nimport { usePaymentPlanCreationForm } from \"~/routes/dashboard/paymentplan\";\n\ninterface props {\n  transactions: SlimTransaction[];\n  idx: number;\n  accountId: string;\n}\n\nconst transactionIDToAmount = (trxns: SlimTransaction[]) => {\n  const transactionsDict = new Map<string, number>();\n  trxns.forEach((item) => {\n    transactionsDict.set(item.id, Number(item.amount.slice(1)));\n  });\n  return transactionsDict;\n};\n\nexport const PaymentPlanTransactions: FC<props> = ({\n  transactions,\n  idx,\n  accountId,\n}) => {\n  const [rowSelection, setRowSelection] = useState<RowSelectionState>({});\n  const { updateAmount, setTotalAmount, updateAccountInfo } =\n    usePaymentPlanCreationForm((state) => state);\n\n  const columns = useMemo<MRT_ColumnDef<SlimTransaction>[]>(\n    () => [\n      {\n        header: \"Name\",\n        accessorKey: \"name\",\n      },\n      {\n        header: \"Date\",\n        accessorKey: \"date\",\n      },\n      {\n        header: \"Amount\",\n        accessorKey: \"amount\",\n      },\n    ],\n    []\n  );\n\n  const data: SlimTransaction[] = useMemo(() => transactions, [transactions]);\n  const trxnIdToAmount: Map<string, number> = useMemo(\n    () => transactionIDToAmount(transactions),\n    [transactions]\n  );\n\n  useEffect(() => {\n    const selectedRows: string[] = Object.keys(rowSelection);\n\n    let total = 0;\n    selectedRows.forEach((id) => {\n      total += trxnIdToAmount.get(id) || 0;\n    });\n\n    const accountInfo = {\n      transaction_ids: selectedRows,\n      account_id: accountId,\n      amount: total,\n    };\n    // console.log(`accountInfo for transaction ${idx}`, accountInfo);\n\n    updateAmount(total, idx);\n    setTotalAmount();\n    updateAccountInfo(accountInfo, idx);\n  }, [rowSelection]);\n\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <MaterialReactTable\n        columns={columns}\n        data={data}\n        enableRowSelection\n        getRowId={(row) => row.id}\n        onRowSelectionChange={setRowSelection}\n        state={{ rowSelection }}\n        enableStickyHeader={true}\n        enablePagination={false}\n        enableDensityToggle={false}\n        enableTopToolbar={false}\n      />\n    </Paper>\n  );\n};\n", "import { Card } from \"@tremor/react\";\nimport {\n  BanknotesIcon,\n  CalendarDaysIcon,\n  CalendarIcon,\n} from \"@heroicons/react/24/outline\";\nimport React, { useEffect, useRef } from \"react\";\nimport { PaymentFrequency, PlanType, TimelineMonths } from \"~/utils/constants\";\nimport type { DropdownInput } from \"~/utils/types.server\";\nimport { PreferenceDropdownItem } from \"~/components/select-box\";\nimport { usePaymentPlanCreationForm } from \"~/routes/dashboard/paymentplan\";\n\nexport default function PaymentPlanPreferences() {\n  const {\n    timeline,\n    frequency,\n    planType,\n    updateTimeline,\n    updateFrequency,\n    updatePlanType,\n  } = usePaymentPlanCreationForm((state) => state);\n\n  const firstLoad = useRef(true);\n\n  useEffect(() => {\n    firstLoad.current = false;\n  }, []);\n\n  const handleInputChange = (value: number, field: string) => {\n    switch (field) {\n      case \"timeline\":\n        updateTimeline(value);\n        break;\n      case \"frequency\":\n        updateFrequency(value);\n        break;\n      case \"planType\":\n        updatePlanType(value);\n        break;\n    }\n  };\n\n  const toDropdownOption = (selection: Map<number, string>, icon: any) => {\n    let data: DropdownInput[] = [];\n    for (const [key, value] of selection) {\n      data.push({\n        value: key,\n        text: value,\n        icon: icon,\n      });\n    }\n    return data;\n  };\n\n  return (\n    <>\n      <Card maxWidth=\"max-w-xs\">\n        <PreferenceDropdownItem\n          label=\"Payment Timeline (Months)\"\n          options={toDropdownOption(TimelineMonths, CalendarIcon)}\n          onChange={(e) => handleInputChange(e, \"timeline\")}\n          value={timeline}\n        />\n      </Card>\n      <Card maxWidth=\"max-w-xs\">\n        <PreferenceDropdownItem\n          label=\"Payment Frequency\"\n          options={toDropdownOption(PaymentFrequency, CalendarDaysIcon)}\n          onChange={(e) => handleInputChange(e, \"frequency\")}\n          value={frequency}\n        />\n      </Card>\n      <Card maxWidth=\"max-w-xs\">\n        <PreferenceDropdownItem\n          label=\"Payment Plan Type\"\n          options={toDropdownOption(PlanType, BanknotesIcon)}\n          onChange={(e) => handleInputChange(e, \"planType\")}\n          value={planType}\n        />\n      </Card>\n    </>\n  );\n}\n", "import { Dropdown, DropdownItem, Text } from \"@tremor/react\";\nimport type { DropdownInput } from \"~/utils/types.server\";\n\ninterface props {\n  options: DropdownInput[];\n  label?: string;\n  onChange?: (...args: any) => any;\n  value?: any;\n}\n\nexport function PreferenceDropdownItem({\n  options = [],\n  onChange = () => {},\n  label,\n  value,\n}: props) {\n  return (\n    <>\n      <Text>{label}</Text>\n      <Dropdown\n        onValueChange={(e) => {\n          onChange(e);\n        }}\n        marginTop=\"mt-1\"\n        placeholder=\"Unknown\"\n        value={value || 0}\n      >\n        {options.map((item, i) => (\n          <DropdownItem\n            key={i}\n            value={item.value}\n            text={item.text}\n            icon={item.icon}\n          />\n        ))}\n      </Dropdown>\n    </>\n  );\n}\n", "import { SignIn } from \"@clerk/remix\";\n\nexport default function SignInPage(): JSX.Element {\n  return (\n    <div className=\"container\">\n      <SignIn path=\"/sign-in\" routing=\"path\" signUpUrl=\"/sign-up\" />\n    </div>\n  );\n}\n", "import { SignUp } from \"@clerk/remix\";\n\nexport default function SignUpPage(): JSX.Element {\n  return (\n    <div className=\"container\">\n      <SignUp path=\"/sign-up\" routing=\"path\" signInUrl=\"/sign-in\" />\n    </div>\n  );\n}\n", "// import { redirect } from \"@remix-run/node\";\n// import type { LoaderFunction } from \"@remix-run/node\";\n// import { useLoaderData } from \"@remix-run/react\";\n// import { useUser } from \"@clerk/remix\";\n// import { getAuth } from \"@clerk/remix/ssr.server\";\n//\n// const mockGetPosts = (userId: string) => {\n//   return Promise.resolve([\n//     { title: \"A Post\", content: \"Hello from Clerk + Remix\" },\n//   ]);\n// };\n//\n// export const loader: LoaderFunction = async (args) => {\n//   const { userId, sessionId, getToken } = await getAuth(args);\n//   console.log(\n//     \"Use getAuth() to access the auth state:\",\n//     userId,\n//     sessionId,\n//     getToken\n//   );\n//\n//   if (!userId) {\n//     return redirect(\"/sign-in\");\n//   }\n//\n//   const posts = await mockGetPosts(userId);\n//   return { posts };\n// };\n//\n// export default function SsrDemoPage() {\n//   const { isSignedIn, isLoaded, user } = useUser();\n//   const { posts } = useLoaderData();\n//\n//   return (\n//     <div className=\"container\">\n//       <main className=\"main\">\n//         <h1 className=\"title\">SSR Demo page</h1>\n//         <p className=\"description\">\n//           This page and any displayed data are fully rendered on the server\n//           side. Reload this page to try it out.\n//         </p>\n//\n//         <div className=\"preContainer\">\n//           <h2>useLoaderData hook</h2>\n//           <p className=\"description\">\n//             The loader uses getAuth to get the userId and fetch the posts from a\n//             remote database\n//           </p>\n//           <pre>{JSON.stringify({ posts }, null, 2)}</pre>\n//         </div>\n//\n//         <div className=\"preContainer\">\n//           <h2>useUser hook</h2>\n//           <p className=\"description\">\n//             Passing {`{ loadUser: true }`} to the root loader makes all Clerk\n//             data available both during SSR and CSR\n//           </p>\n//           <pre>{JSON.stringify({ isLoaded })}</pre>\n//           <pre>{JSON.stringify({ isSignedIn })}</pre>\n//           <pre>{JSON.stringify({ user }, null, 2)}</pre>\n//         </div>\n//       </main>\n//     </div>\n//   );\n// }\n\nexport {};\n", "import { UserProfile } from \"@clerk/remix\";\n\nexport default function UserProfilePage(): JSX.Element {\n  return <UserProfile path=\"/user\" routing=\"path\" />;\n}\n", "const About = (): JSX.Element => (\n  <div className=\"container\">\n    <h2>About Page</h2>\n  </div>\n);\n\nexport default About;\n", "import { Link } from \"@remix-run/react\";\nimport { SignedOut } from \"@clerk/remix\";\nimport Footer from \"~/components/Footer\";\nimport { Badge, Flex } from \"@tremor/react\";\nimport { UserPlusIcon } from \"@heroicons/react/20/solid\";\n\n// Main component using <SignedIn> and <SignedOut>\n//\n// The SignedIn and SignedOut components are used to control rendering depending\n// on whether a visitor is signed in.\n//\n// https://docs.clerk.dev/frontend/react/signedin-and-signedout\nconst Main = (): JSX.Element => {\n  return (\n    <main>\n      <div className=\"relative px-6 lg:px-8\">\n        <div className=\"mx-auto max-w-2xl py-32 sm:py-48 lg:py-56\">\n          <Flex justifyContent=\"justify-center\" alignItems=\"items-center\">\n            <Link to=\"/\" className=\"font-semibold text-indigo-600\">\n              <Badge\n                text=\"Join the waitlist for premium\"\n                color=\"indigo\"\n                size=\"sm\"\n                icon={UserPlusIcon}\n              />\n            </Link>\n          </Flex>\n          <div className=\"pt-4 text-center\">\n            <h1 className=\"text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl\">\n              Tired managing all of your credit payments on your own?\n            </h1>\n            <p className=\"mt-6 text-lg leading-8 text-gray-600\">\n              Zero is the easiest way to manage your debt. Zero will help you\n              achieve your credit reduction goals, save on fees, and improve\n              your credit score!\n            </p>\n            <div className=\"mt-10 flex items-center justify-center gap-x-6\">\n              <SignedOut>\n                <Link\n                  to=\"/sign-up\"\n                  className=\"rounded-md bg-indigo-600 px-3.5 py-1.5 text-base font-semibold leading-7 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                >\n                  Sign up today\n                </Link>\n              </SignedOut>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default function Index(): JSX.Element {\n  return (\n    <div>\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n", "const Footer = (): JSX.Element => (\n  <footer className=\"footer\">\n    <div className=\"absolute inset-x-0 top-[calc(100%-13rem)] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-30rem)]\">\n      <svg\n        className=\"relative left-[calc(50%+3rem)] h-[21.1875rem] max-w-none -translate-x-1/2 sm:left-[calc(50%+36rem)] sm:h-[42.375rem]\"\n        viewBox=\"0 0 1155 678\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fill=\"url(#ecb5b0c9-546c-4772-8c71-4d3f06d544bc)\"\n          fillOpacity=\".3\"\n          d=\"M317.219 518.975L203.852 678 0 438.341l317.219 80.634 204.172-286.402c1.307 132.337 45.083 346.658 209.733 145.248C936.936 126.058 882.053-94.234 1031.02 41.331c119.18 108.451 130.68 295.337 121.53 375.223L855 299l21.173 362.054-558.954-142.079z\"\n        />\n        <defs>\n          <linearGradient\n            id=\"ecb5b0c9-546c-4772-8c71-4d3f06d544bc\"\n            x1=\"1155.49\"\n            x2=\"-78.208\"\n            y1=\".177\"\n            y2=\"474.645\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#9089FC\" />\n            <stop offset={1} stopColor=\"#FF80B5\" />\n          </linearGradient>\n        </defs>\n      </svg>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n", "export default {'version':'aee170dc','entry':{'module':'/build/entry.client-T6MR2GO2.js','imports':['/build/_shared/chunk-Q534JW7M.js','/build/_shared/chunk-57IHADGV.js','/build/_shared/chunk-C5TTSP2F.js','/build/_shared/chunk-VFRHADDM.js','/build/_shared/chunk-7D7DT4QB.js','/build/_shared/chunk-FN3KWL4V.js','/build/_shared/chunk-4IYZMDEG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-FEQAHFYR.js','imports':['/build/_shared/chunk-DBILLFTU.js','/build/_shared/chunk-YVQB3I6F.js','/build/_shared/chunk-G73LA7VM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-7TTNTKUA.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-RETWJB4W.js','imports':['/build/_shared/chunk-WSCFA3WW.js','/build/_shared/chunk-B6DLWJ7T.js','/build/_shared/chunk-LD7WHCZL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/paymentplan':{'id':'routes/dashboard/paymentplan','parentId':'routes/dashboard','path':'paymentplan','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/paymentplan-D3LR3KSN.js','imports':['/build/_shared/chunk-DBILLFTU.js','/build/_shared/chunk-G2W6NV6B.js','/build/_shared/chunk-NYNKRIV3.js','/build/_shared/chunk-YVQB3I6F.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/paymentplan.summary':{'id':'routes/dashboard/paymentplan.summary','parentId':'routes/dashboard','path':'paymentplan/summary','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/paymentplan.summary-2DZ7PDRT.js','imports':['/build/_shared/chunk-MB6TZX73.js','/build/_shared/chunk-G2W6NV6B.js','/build/_shared/chunk-NYNKRIV3.js','/build/_shared/chunk-YVQB3I6F.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-CFJTH6ED.js','imports':['/build/_shared/chunk-I5WGOWRP.js','/build/_shared/chunk-LD7WHCZL.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/paymentplans':{'id':'routes/paymentplans','parentId':'root','path':'paymentplans','index':undefined,'caseSensitive':undefined,'module':'/build/routes/paymentplans-BI63P7DQ.js','imports':['/build/_shared/chunk-I5WGOWRP.js','/build/_shared/chunk-MB6TZX73.js','/build/_shared/chunk-WSCFA3WW.js','/build/_shared/chunk-NYNKRIV3.js','/build/_shared/chunk-B6DLWJ7T.js','/build/_shared/chunk-LD7WHCZL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in/$':{'id':'routes/sign-in/$','parentId':'root','path':'sign-in/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in/$-NHAO4E4F.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up/$':{'id':'routes/sign-up/$','parentId':'root','path':'sign-up/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up/$-SP42KYOR.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/ssr-demo':{'id':'routes/ssr-demo','parentId':'root','path':'ssr-demo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/ssr-demo-77H5Y3C7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/ssr-user-demo':{'id':'routes/ssr-user-demo','parentId':'root','path':'ssr-user-demo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/ssr-user-demo-RJ72KY2Z.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/$':{'id':'routes/user/$','parentId':'root','path':'user/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/$-KHDS4KAT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'url':'/build/manifest-AEE170DC.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/ssr-user-demo.tsx\";\nimport * as route2 from \"./routes/paymentplans.tsx\";\nimport * as route3 from \"./routes/dashboard.tsx\";\nimport * as route4 from \"./routes/dashboard/paymentplan.summary.tsx\";\nimport * as route5 from \"./routes/dashboard/paymentplan.tsx\";\nimport * as route6 from \"./routes/sign-in/$.tsx\";\nimport * as route7 from \"./routes/sign-up/$.tsx\";\nimport * as route8 from \"./routes/ssr-demo.tsx\";\nimport * as route9 from \"./routes/user/$.tsx\";\nimport * as route10 from \"./routes/about.tsx\";\nimport * as route11 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":false,\"v2_meta\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/ssr-user-demo\": {\n      id: \"routes/ssr-user-demo\",\n      parentId: \"root\",\n      path: \"ssr-user-demo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/paymentplans\": {\n      id: \"routes/paymentplans\",\n      parentId: \"root\",\n      path: \"paymentplans\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/dashboard/paymentplan.summary\": {\n      id: \"routes/dashboard/paymentplan.summary\",\n      parentId: \"routes/dashboard\",\n      path: \"paymentplan/summary\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/dashboard/paymentplan\": {\n      id: \"routes/dashboard/paymentplan\",\n      parentId: \"routes/dashboard\",\n      path: \"paymentplan\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/sign-in/$\": {\n      id: \"routes/sign-in/$\",\n      parentId: \"root\",\n      path: \"sign-in/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/sign-up/$\": {\n      id: \"routes/sign-up/$\",\n      parentId: \"root\",\n      path: \"sign-up/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/ssr-demo\": {\n      id: \"routes/ssr-demo\",\n      parentId: \"root\",\n      path: \"ssr-demo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/user/$\": {\n      id: \"routes/user/$\",\n      parentId: \"root\",\n      path: \"user/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "createCache", "import_react", "import_styles", "dotenv", "CssBaseline", "request", "isbot", "import_react", "import_remix", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "Container", "import_react", "import_jsx_dev_runtime", "request", "action", "loader", "import_react", "import_react", "import_outline", "month", "import_jsx_dev_runtime", "action", "idx", "import_solid", "import_react", "import_node", "axios", "accounts", "a", "json", "a", "typ", "val", "l", "key", "accounts", "transactions", "json", "import_ssr", "loader", "import_node", "import_react", "import_ssr", "import_react", "import_jsx_dev_runtime", "waterfall", "import_react", "import_jsx_dev_runtime", "kpis", "import_react", "import_react", "import_jsx_dev_runtime", "transactions", "Stack", "Pagination", "import_api", "import_jsx_dev_runtime", "transactions", "kpis", "waterfall", "request", "loader", "import_jsx_dev_runtime", "action", "request", "loader", "loader", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "loader", "request", "action", "loader", "import_react", "import_node", "import_ssr", "import_react", "import_react", "import_jsx_dev_runtime", "transactions", "Paper", "MaterialReactTable", "import_jsx_dev_runtime", "import_react", "import_outline", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "initialState", "action", "request", "loader", "import_remix", "import_jsx_dev_runtime", "__exports", "import_remix", "import_jsx_dev_runtime", "__exports", "import_remix", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_remix", "import_jsx_dev_runtime", "Footer", "import_react", "import_solid", "import_jsx_dev_runtime", "__exports"]
}
